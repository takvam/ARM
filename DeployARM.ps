

#connect
Connect-AzAccount
#in case several subs
Set-AzContext [SubscriptionID/SubscriptionName]

#adding storage

New-AzResourceGroupDeplyment 
    -Name addskuparameter
    -ResourceGroupName myResourceGroup
    -TemplateFile $templateFile
    -storagePrefix "store"
    -storageSKU basic

#adding new role definition

New-AzRoleDefinition -InputFile $HOME/aztest-customRoleDefinition.json

#process to deploy template:
#1. Add Resource group
$projectName = Read-Host -Prompt "ARM_templates"
$templateFile = Read-Host -Prompt "C:\Users\Alexa\OneDrive\Dokumenter\ARM-templates\ARM\azuredeploy.parameters.prod"
$ResourceGroupName = "${projectName}rg"

New-AzResourceGroupDeployment `
    -Name DeployLocalTemplate `
    -ResourceGroupName $ResourceGroupName `
    -TemplateFile $TemplateFile  `
    -projectName $projectName `
    -verbose

#What-if
#The az deployment group what-if command gives you a preview of what will happen if you carry out a development
#FullResourcePayloads gives a verbose output that consists of a list of resources that will change, the output also shows details about all the properties that will change in accordance with the template.

New-AzResourceGroupDeployment 
-ResourceGroupName ToyStorage 
-TemplateFile $templateFileName 
-WhatIf 
-WhatIfResultFormat FullResourcePayloads

#For ARM, download git clone https://github.com/Azure/arm-ttk.git, testing ARM-templates.
# import-module C:\Users\Alexa\OneDrive\Dokumenter\ARM-templates\arm-ttk\arm-ttk sets up the test
# Test-AzTemplate -TemplatePath . tests the template

